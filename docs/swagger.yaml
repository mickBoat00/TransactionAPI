basePath: /api/v1
definitions:
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.CategoryRequestParams:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.Currency:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.ErrorJsonParams:
    properties:
      error:
        type: string
    type: object
  models.TransactionRequestParams:
    properties:
      amount:
        type: number
      category_id:
        type: string
      currency_id:
        type: string
      date:
        type: string
    type: object
  models.TransactionResponseParams:
    properties:
      amount:
        type: number
      category_id:
        type: string
      created_at:
        type: string
      currency_id:
        type: string
      date:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.UserRequestParams:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    type: object
  models.UserResponseParams:
    properties:
      token:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample transactions server.
  termsOfService: http://swagger.io/terms/
  title: Transaction API
  version: "1.0"
paths:
  /categories/:
    get:
      consumes:
      - application/json
      description: get user categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      security:
      - ApiKeyAuth: []
      summary: List categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: create by json Category
      parameters:
      - description: Add Category
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryRequestParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      security:
      - ApiKeyAuth: []
      summary: Create a category
      tags:
      - Category
  /categories/{uuid}/:
    delete:
      consumes:
      - application/json
      description: Delete by category UUID
      parameters:
      - description: Category UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      security:
      - ApiKeyAuth: []
      summary: Delete a category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update by category UUID
      parameters:
      - description: Category UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Add Category
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryRequestParams'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      security:
      - ApiKeyAuth: []
      summary: Update a category
      tags:
      - Category
  /currencies/:
    get:
      consumes:
      - application/json
      description: get currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Currency'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      summary: List currencies
      tags:
      - Currency
  /login/:
    post:
      consumes:
      - application/json
      description: Generate jwt token for user
      parameters:
      - description: Login User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserRequestParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponseParams'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      summary: Generate jwt token
      tags:
      - Auth
  /signup/:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: Add User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserRequestParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponseParams'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      summary: Sign up
      tags:
      - Auth
  /transactions/:
    get:
      consumes:
      - application/json
      description: get user transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransactionResponseParams'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      security:
      - ApiKeyAuth: []
      summary: List transaction
      tags:
      - Transaction
    post:
      consumes:
      - application/json
      description: create by json Transaction
      parameters:
      - description: Add Transaction
        in: body
        name: Transaction
        required: true
        schema:
          $ref: '#/definitions/models.TransactionRequestParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionResponseParams'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorJsonParams'
      security:
      - ApiKeyAuth: []
      summary: Create a transaction
      tags:
      - Transaction
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
